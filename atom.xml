<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[DCL]]></title>
  <link href="http://www.dcljs.org/atom.xml" rel="self"/>
  <link href="http://www.dcljs.org/"/>
  <updated>2017-06-10T23:08:48-05:00</updated>
  <id>http://www.dcljs.org/</id>
  <author>
    <name><![CDATA[Eugene Lazutkin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[New major release: 2.0]]></title>
    <link href="http://www.dcljs.org/blog/2017/06/09/new-major-release-2-dot-0/"/>
    <updated>2017-06-09T20:34:57-05:00</updated>
    <id>http://www.dcljs.org/blog/2017/06/09/new-major-release-2-dot-0</id>
    <content type="html"><![CDATA[<p>New major release 2.0 for Node and ES5 browsers builds on 1.x branch, and adds following features:</p>

<ul>
<li>Simplified API.</li>
<li>Supports ES5 features: getters, setters, generic property descriptors.

<ul>
<li>Internally all properties are defined using ES5 property descriptor API.</li>
</ul>
</li>
<li>Properties can be defined using the classic object notation, and the list of property descriptors.</li>
<li>New decorator: <code>dcl.prop()</code>.

<ul>
<li>Property descriptors can be specified directly.</li>
<li>Getter and setters can be advised as easy as regular methods.</li>
<li>Supports &ldquo;class&rdquo;-wide defaults for <code>configurable</code>, <code>enumerable</code>, and <code>writable</code>.</li>
</ul>
</li>
<li><code>detectProps</code> mode can detect property descriptors in-line without decorators.</li>
<li>Node&rsquo;s <code>require()</code> import, and AMD are supported out of box.</li>
<li>For convenience a version based on browser globals is provided.</li>
</ul>


<!-- more -->


<p>At the same time it continues to support successful familiar features:</p>

<ul>
<li>Mixin-style OOP.

<ul>
<li>The same trusted and proven C3 MRO linearization algorithm for inherited mixins.</li>
</ul>
</li>
<li>Full set of AOP.

<ul>
<li>Supports &ldquo;class&rdquo; definitions.</li>
<li>Regular objects can be advised dynamically.</li>
</ul>
</li>
<li>The same library of useful advices, bases, and mixins.</li>
<li>Special debugging facilities, which helped our users with tricky cases.</li>
<li>Rigorously documented.</li>
</ul>


<p><a href="http://www.dcljs.org/1.x/docs/">Version 1.x</a> is still supported and will continue to be available for legacy browsers.</p>

<p>Check out the <a href="http://www.dcljs.org/2.x/docs/">full documentation</a>. Use the <a href="http://www.dcljs.org/2.x/docs/installation/">installation guide</a> to start using the new <code>dcl</code> in your projects.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[1.1.3: micro update]]></title>
    <link href="http://www.dcljs.org/blog/2015/04/06/1-dot-1-3-micro-update/"/>
    <updated>2015-04-06T23:25:57-05:00</updated>
    <id>http://www.dcljs.org/blog/2015/04/06/1-dot-1-3-micro-update</id>
    <content type="html"><![CDATA[<p>1.1.3 introduces a check against a wrong type of super (e.g., making a super
call for numeric property), adds new CI targets, and fixes a version for <a href="http://bower.io/">bower</a>.</p>

<p>This is a minor release, which can be safely skipped by most users.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[1.1.2: technical release]]></title>
    <link href="http://www.dcljs.org/blog/2014/12/28/1-dot-1-2-technical-release/"/>
    <updated>2014-12-28T00:16:43-06:00</updated>
    <id>http://www.dcljs.org/blog/2014/12/28/1-dot-1-2-technical-release</id>
    <content type="html"><![CDATA[<p>1.1.2 is an intermediate technical release. While the interface and the functionality were not affected,
internals were refactored, and updated to improve their readability and maintainability.</p>

<p>This update can be safely skipped by most users, yet I advise to test it against your codebase,
because it will serve as a foundation for the upcoming major version.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Micro update: 1.1.1]]></title>
    <link href="http://www.dcljs.org/blog/2013/11/05/micro-update-1-dot-1-1/"/>
    <updated>2013-11-05T16:31:00-06:00</updated>
    <id>http://www.dcljs.org/blog/2013/11/05/micro-update-1-dot-1-1</id>
    <content type="html"><![CDATA[<p>New release of <code>dcl</code> (1.1.1) includes two minor bug fixes:</p>

<ul>
<li>Bugfix: a stray comma in a test file, which acted up in legacy browsers.</li>
<li>Bugfix: <a href="http://www.dcljs.org/1.x/docs/mini_js/mix/">dcl.mix()</a> was called directly in the base modules preventing it from being monkey-patched.</li>
</ul>


<p>Most users can safely skip this update, unless they are directly affected by the monkey-patch bug.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[1.1: legacy]]></title>
    <link href="http://www.dcljs.org/blog/2013/10/04/1-dot-1-legacy/"/>
    <updated>2013-10-04T23:11:00-05:00</updated>
    <id>http://www.dcljs.org/blog/2013/10/04/1-dot-1-legacy</id>
    <content type="html"><![CDATA[<p>This is a major update, which includes support for legacy browsers (IE &lt; 9). It doesn&rsquo;t affect existing users, because it doesn&rsquo;t change the API or its semantics, but provides an option for legacy applications. It is considered &ldquo;major&rdquo; because it changes some internal plumbing.</p>

<p><a href="http://www.dcljs.org/1.x/docs/legacy_js/">legacy.js</a> documentation contains all necessary background information for the change, and recommendations on how to use it in real projects.</p>

<!-- more -->


<p>Changes:</p>

<ul>
<li>Added metadata for an extended Dojo release.</li>
<li>Internal code is better formatted, better documented, variables are renamed to use more suggestive names.</li>
<li>Added <a href="http://www.dcljs.org/1.x/docs/legacy_js/">legacy.js</a> module, which is a substitute for <a href="http://www.dcljs.org/1.x/docs/mini_js/">mini.js</a> in legacy environments.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[1.0.4: added to Bower]]></title>
    <link href="http://www.dcljs.org/blog/2013/07/24/1-dot-0-4-added-to-bower/"/>
    <updated>2013-07-24T10:05:00-05:00</updated>
    <id>http://www.dcljs.org/blog/2013/07/24/1-dot-0-4-added-to-bower</id>
    <content type="html"><![CDATA[<p>This is a technical release, which doesn&rsquo;t change the functionality in any way. You can safely skip it.</p>

<p>The version bump was required in order to add <code>dcl</code> to <a href="http://bower.io/">bower</a> &mdash; a generic, unopinionated solution to the problem of front-end package management. If you use Bower to manage your project dependencies, you can install <code>dcl</code> like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bower install dcl</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Update: 1.0.3]]></title>
    <link href="http://www.dcljs.org/blog/2013/05/30/update-1-dot-0-3/"/>
    <updated>2013-05-30T20:02:00-05:00</updated>
    <id>http://www.dcljs.org/blog/2013/05/30/update-1-dot-0-3</id>
    <content type="html"><![CDATA[<p>New update was pushed out. Changes:</p>

<ul>
<li>Bugfix: in some cases when using a native constructor created without <code>dcl</code>
it was not called when creating an object. This bug is fixed and relevant
tests were added.</li>
<li>All tests are consolidated using <a href="https://github.com/heya/unit">heya-unit</a>.
No more manual tests.</li>
<li>Added an automated testing in <a href="http://phantomjs.org/">PhantomJS</a> environment.</li>
<li>Increased test coverage.</li>
</ul>


<p>This update is about maintenance. It doesn&rsquo;t introduce new features. Given that
the fixed bug is quite exotic, this update can be skipped unless your code contains
a mix of <code>dcl</code> and non-<code>dcl</code> bases and mixins in the same constructor functions.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dcl added to jam]]></title>
    <link href="http://www.dcljs.org/blog/2013/01/11/dcl-added-to-jam/"/>
    <updated>2013-01-11T15:39:00-06:00</updated>
    <id>http://www.dcljs.org/blog/2013/01/11/dcl-added-to-jam</id>
    <content type="html"><![CDATA[<p><code>dcl</code> was added to <a href="http://jamjs.org/">jam</a> &mdash; the RequireJS-based package manager
for front-end projects. If you use jam to manage your project dependencies, you can install <code>dcl</code> like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>jam install dcl</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Micro update: 1.0.2]]></title>
    <link href="http://www.dcljs.org/blog/2012/12/30/micro-update-1-dot-0-2/"/>
    <updated>2012-12-30T14:20:00-06:00</updated>
    <id>http://www.dcljs.org/blog/2012/12/30/micro-update-1-dot-0-2</id>
    <content type="html"><![CDATA[<p>New update was pushed out. Changes:</p>

<ul>
<li>Some instances of <code>new Function</code> were replaced with <code>function(){}</code>
to bypass <a href="https://dvcs.w3.org/hg/content-security-policy/raw-file/bcf1c45f312f/csp-unofficial-draft-20110303.html">Content Security Policy</a> restrictions,
because <code>new Function</code> even without any parameters is considered to be <code>eval</code>
(???), and forces to allow <code>eval</code> globally.</li>
</ul>


<p>This update doesn&rsquo;t affect any functionality, and can be safely skipped, if you
don&rsquo;t work with security-constrained environments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Inroduction to dcl]]></title>
    <link href="http://www.dcljs.org/blog/2012/12/21/inroduction-to-dcl/"/>
    <updated>2012-12-21T01:05:00-06:00</updated>
    <id>http://www.dcljs.org/blog/2012/12/21/inroduction-to-dcl</id>
    <content type="html"><![CDATA[<p><a href="http://davidwalsh.name/about-david-walsh">David Walsh</a> has asked me
to do a guest blog post. When I offered him to write about <code>dcl</code>,
he agreed, and here we go:
<a href="http://davidwalsh.name/intro-dcl">Introduction to dcl</a>.</p>

<p>If you don&rsquo;t read <a href="http://davidwalsh.name/">David&rsquo;s blog</a> regularly,
and you are serious about web applications, you are missing out.
He frequently publishes very interesting articles on JavaScript, CSS,
new development in browsers, and so on. Check out his tutorials,
demos, and in-depth articles. Get yourself in the know.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[1.0.1 is out]]></title>
    <link href="http://www.dcljs.org/blog/2012/12/18/1-dot-0-1-is-out/"/>
    <updated>2012-12-18T02:43:00-06:00</updated>
    <id>http://www.dcljs.org/blog/2012/12/18/1-dot-0-1-is-out</id>
    <content type="html"><![CDATA[<p>1.0.1 is a minor update. This version has following changes:</p>

<ul>
<li>Added <a href="http://www.dcljs.org/1.x/docs/inherited_js/getinherited/">getInherited()</a> as an alias for
<a href="http://www.dcljs.org/1.x/docs/inherited_js/get/">inherited.get()</a> to simplify its use. Now
there is no need to use <code>call()</code> or <code>apply()</code> to specify its instance.</li>
<li>Added tests for <code>dcl</code> exceptions.</li>
<li>Added tests for canned advices and mixins.</li>
<li>Changed export names for <code>&lt;script&gt;</code> inclusion.</li>
<li>Error messages are better formatted.</li>
<li>Minor clean up, better comments, documentation updates.</li>
</ul>


<p>So far <code>dcl</code> has proved to be fairly stable, no major bugs were found.
Almost all changes in 1.0.1 are backward-compatible, and upgrading to it
should be transparent.</p>

<p>The only non-compatible change is export names with <code>&lt;script&gt;</code> tags,
which are not recommended anyway &ndash; when in browser please use an AMD
loader like <a href="http://requirejs.org/">RequireJS</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[1.0 is public]]></title>
    <link href="http://www.dcljs.org/blog/2012/10/05/1-dot-0-is-public/"/>
    <updated>2012-10-05T21:40:00-05:00</updated>
    <id>http://www.dcljs.org/blog/2012/10/05/1-dot-0-is-public</id>
    <content type="html"><![CDATA[<p>Finally after months of private use 1.0 version of <code>dcl</code> is out
in the open.</p>

<p>What is <code>dcl</code>? It is a micro library for OOP/AOP. It works in
<a href="http://nodejs.org">node.js</a> and modern browsers, supports <a href="https://github.com/amdjs/amdjs-api/wiki/AMD">AMD</a>, and completely
<a href="http://github.com/uhop/dcl">open source</a>.</p>

<!-- More -->


<p>If you plan to use it in your <a href="http://nodejs.org">node.js</a> project install it
like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install dcl</span></code></pre></td></tr></table></div></figure>


<p>For your browser-based projects I suggest to use <a href="http://volojs.org">volo.js</a>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>volo install -amd uhop/dcl</span></code></pre></td></tr></table></div></figure>


<p>It is licensed under BSD or AFLv2 (your choice), all contributions
are legally clean and covered by CLA, so you can use it not only
for pet projects, but at work too.</p>

<p>For more information hop on <a href="http://www.dcljs.org/about/">what is dcl?</a> and learn more.
Do not forget to look at extensive <a href="http://www.dcljs.org/1.x/docs/">documentation</a>, or
<a href="mailto:eugene@dcljs.org">shoot me an email</a>, if you still have
more questions.</p>
]]></content>
  </entry>
  
</feed>
